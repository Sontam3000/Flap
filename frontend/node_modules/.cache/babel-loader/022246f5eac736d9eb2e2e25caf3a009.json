{"ast":null,"code":"var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar players_exports = {};\n__export(players_exports, {\n  default: () => players_default\n});\nmodule.exports = __toCommonJS(players_exports);\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nvar players_default = [{\n  key: \"youtube\",\n  name: \"YouTube\",\n  canPlay: import_patterns.canPlay.youtube,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerYouTube' */\n  \"./YouTube\"))\n}, {\n  key: \"soundcloud\",\n  name: \"SoundCloud\",\n  canPlay: import_patterns.canPlay.soundcloud,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerSoundCloud' */\n  \"./SoundCloud\"))\n}, {\n  key: \"vimeo\",\n  name: \"Vimeo\",\n  canPlay: import_patterns.canPlay.vimeo,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerVimeo' */\n  \"./Vimeo\"))\n}, {\n  key: \"facebook\",\n  name: \"Facebook\",\n  canPlay: import_patterns.canPlay.facebook,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerFacebook' */\n  \"./Facebook\"))\n}, {\n  key: \"streamable\",\n  name: \"Streamable\",\n  canPlay: import_patterns.canPlay.streamable,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerStreamable' */\n  \"./Streamable\"))\n}, {\n  key: \"wistia\",\n  name: \"Wistia\",\n  canPlay: import_patterns.canPlay.wistia,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerWistia' */\n  \"./Wistia\"))\n}, {\n  key: \"twitch\",\n  name: \"Twitch\",\n  canPlay: import_patterns.canPlay.twitch,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerTwitch' */\n  \"./Twitch\"))\n}, {\n  key: \"dailymotion\",\n  name: \"DailyMotion\",\n  canPlay: import_patterns.canPlay.dailymotion,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerDailyMotion' */\n  \"./DailyMotion\"))\n}, {\n  key: \"mixcloud\",\n  name: \"Mixcloud\",\n  canPlay: import_patterns.canPlay.mixcloud,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerMixcloud' */\n  \"./Mixcloud\"))\n}, {\n  key: \"vidyard\",\n  name: \"Vidyard\",\n  canPlay: import_patterns.canPlay.vidyard,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerVidyard' */\n  \"./Vidyard\"))\n}, {\n  key: \"kaltura\",\n  name: \"Kaltura\",\n  canPlay: import_patterns.canPlay.kaltura,\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerKaltura' */\n  \"./Kaltura\"))\n}, {\n  key: \"file\",\n  name: \"FilePlayer\",\n  canPlay: import_patterns.canPlay.file,\n  canEnablePIP: url => {\n    return import_patterns.canPlay.file(url) && (document.pictureInPictureEnabled || (0, import_utils.supportsWebKitPresentationMode)()) && !import_patterns.AUDIO_EXTENSIONS.test(url);\n  },\n  lazyPlayer: (0, import_utils.lazy)(() => import( /* webpackChunkName: 'reactPlayerFilePlayer' */\n  \"./FilePlayer\"))\n}];","map":null,"metadata":{},"sourceType":"script"}