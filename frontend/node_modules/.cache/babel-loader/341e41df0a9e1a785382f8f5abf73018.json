{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getFontSize, getLineHeight, getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ListProvider } from './List.context.mjs';\nimport { ListItem } from './ListItem/ListItem.mjs';\nimport classes from './List.module.css.mjs';\nconst defaultProps = {\n  type: \"unordered\"\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    size,\n    spacing\n  } = _ref;\n  return {\n    root: {\n      \"--list-fz\": getFontSize(size),\n      \"--list-lh\": getLineHeight(size),\n      \"--list-spacing\": getSpacing(spacing)\n    }\n  };\n});\nconst List = factory((_props, ref) => {\n  const props = useProps(\"List\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    type,\n    withPadding,\n    icon,\n    spacing,\n    center,\n    listStyleType,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"List\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(ListProvider, {\n    value: {\n      center,\n      icon,\n      getStyles\n    }\n  }, /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"root\", {\n      style: {\n        listStyleType\n      }\n    }),\n    component: type === \"unordered\" ? \"ul\" : \"ol\",\n    mod: [{\n      \"with-padding\": withPadding\n    }, mod],\n    ref,\n    ...others\n  }, children));\n});\nList.classes = classes;\nList.displayName = \"@mantine/core/List\";\nList.Item = ListItem;\nexport { List };","map":null,"metadata":{},"sourceType":"module"}