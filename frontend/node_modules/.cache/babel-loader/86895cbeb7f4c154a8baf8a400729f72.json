{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport { usePillsInputContext } from '../PillsInput/PillsInput.context.mjs';\nimport { usePillGroupContext } from './PillGroup.context.mjs';\nimport { PillGroup } from './PillGroup/PillGroup.mjs';\nimport classes from './Pill.module.css.mjs';\nconst defaultProps = {\n  variant: \"default\"\n};\nconst varsResolver = createVarsResolver((_, _ref, _ref2) => {\n  let {\n    radius\n  } = _ref;\n  let {\n    size\n  } = _ref2;\n  return {\n    root: {\n      \"--pill-fz\": getSize(size, \"pill-fz\"),\n      \"--pill-height\": getSize(size, \"pill-height\"),\n      \"--pill-radius\": radius === void 0 ? void 0 : getRadius(radius)\n    }\n  };\n});\nconst Pill = factory((_props, ref) => {\n  const props = useProps(\"Pill\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    variant,\n    children,\n    withRemoveButton,\n    onRemove,\n    removeButtonProps,\n    radius,\n    size,\n    disabled,\n    mod,\n    ...others\n  } = props;\n  const ctx = usePillGroupContext();\n  const pillsInputCtx = usePillsInputContext();\n  const _size = size || (ctx === null || ctx === void 0 ? void 0 : ctx.size) || void 0;\n  const _variant = (pillsInputCtx === null || pillsInputCtx === void 0 ? void 0 : pillsInputCtx.variant) === \"filled\" ? \"contrast\" : variant || \"default\";\n  const getStyles = useStyles({\n    name: \"Pill\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    stylesCtx: {\n      size: _size\n    }\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    ref,\n    variant: _variant,\n    size: _size,\n    ...getStyles(\"root\", {\n      variant: _variant\n    }),\n    mod: [{\n      \"with-remove\": withRemoveButton,\n      disabled: disabled || (ctx === null || ctx === void 0 ? void 0 : ctx.disabled)\n    }, mod],\n    ...others\n  }, /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"label\")\n  }, children), withRemoveButton && /* @__PURE__ */React.createElement(CloseButton, {\n    variant: \"transparent\",\n    radius,\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    unstyled,\n    ...removeButtonProps,\n    ...getStyles(\"remove\", {\n      className: removeButtonProps === null || removeButtonProps === void 0 ? void 0 : removeButtonProps.className,\n      style: removeButtonProps === null || removeButtonProps === void 0 ? void 0 : removeButtonProps.style\n    }),\n    onMouseDown: event => {\n      var _removeButtonProps$on;\n      event.preventDefault();\n      event.stopPropagation();\n      removeButtonProps === null || removeButtonProps === void 0 ? void 0 : (_removeButtonProps$on = removeButtonProps.onMouseDown) === null || _removeButtonProps$on === void 0 ? void 0 : _removeButtonProps$on.call(removeButtonProps, event);\n    },\n    onClick: event => {\n      var _removeButtonProps$on2;\n      event.stopPropagation();\n      onRemove === null || onRemove === void 0 ? void 0 : onRemove();\n      removeButtonProps === null || removeButtonProps === void 0 ? void 0 : (_removeButtonProps$on2 = removeButtonProps.onClick) === null || _removeButtonProps$on2 === void 0 ? void 0 : _removeButtonProps$on2.call(removeButtonProps, event);\n    }\n  }));\n});\nPill.classes = classes;\nPill.displayName = \"@mantine/core/Pill\";\nPill.Group = PillGroup;\nexport { Pill };","map":null,"metadata":{},"sourceType":"module"}