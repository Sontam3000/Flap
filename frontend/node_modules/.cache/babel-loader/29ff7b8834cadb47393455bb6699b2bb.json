{"ast":null,"code":"'use client';\n\nimport React, { useEffect } from 'react';\nimport { useId } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport classes from '../Combobox.module.css.mjs';\nconst defaultProps = {};\nconst ComboboxOptions = factory((_props, ref) => {\n  const props = useProps(\"ComboboxOptions\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    id,\n    onMouseDown,\n    labelledBy,\n    ...others\n  } = props;\n  const ctx = useComboboxContext();\n  const _id = useId(id);\n  useEffect(() => {\n    ctx.store.setListId(_id);\n  }, [_id]);\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...ctx.getStyles(\"options\", {\n      className,\n      style,\n      classNames,\n      styles\n    }),\n    ...others,\n    id: _id,\n    role: \"listbox\",\n    \"aria-labelledby\": labelledBy,\n    onMouseDown: event => {\n      event.preventDefault();\n      onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown(event);\n    }\n  });\n});\nComboboxOptions.classes = classes;\nComboboxOptions.displayName = \"@mantine/core/ComboboxOptions\";\nexport { ComboboxOptions };","map":null,"metadata":{},"sourceType":"module"}