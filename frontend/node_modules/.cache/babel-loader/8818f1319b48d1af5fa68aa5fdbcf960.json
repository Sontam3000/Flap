{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Mark } from '../Mark/Mark.mjs';\nimport { Text } from '../Text/Text.mjs';\nimport { highlighter } from './highlighter/highlighter.mjs';\nconst defaultProps = {};\nconst Highlight = polymorphicFactory((props, ref) => {\n  const {\n    unstyled,\n    children,\n    highlight,\n    highlightStyles,\n    color,\n    ...others\n  } = useProps(\"Highlight\", defaultProps, props);\n  const highlightChunks = highlighter(children, highlight);\n  return /* @__PURE__ */React.createElement(Text, {\n    unstyled,\n    ref,\n    ...others,\n    __staticSelector: \"Highlight\"\n  }, highlightChunks.map((_ref, i) => {\n    let {\n      chunk,\n      highlighted\n    } = _ref;\n    return highlighted ? /* @__PURE__ */React.createElement(Mark, {\n      unstyled,\n      key: i,\n      color,\n      style: highlightStyles,\n      \"data-highlight\": chunk\n    }, chunk) : /* @__PURE__ */React.createElement(\"span\", {\n      key: i\n    }, chunk);\n  }));\n});\nHighlight.classes = Text.classes;\nHighlight.displayName = \"@mantine/core/Highlight\";\nexport { Highlight };","map":null,"metadata":{},"sourceType":"module"}