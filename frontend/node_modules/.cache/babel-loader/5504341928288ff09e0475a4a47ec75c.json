{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.mjs';\nimport { ActionIconGroup } from './ActionIconGroup/ActionIconGroup.mjs';\nimport classes from './ActionIcon.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    size,\n    radius,\n    variant,\n    gradient,\n    color,\n    autoContrast\n  } = _ref;\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    gradient,\n    variant: variant || \"filled\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--ai-size\": getSize(size, \"ai-size\"),\n      \"--ai-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--ai-bg\": color || variant ? colors.background : void 0,\n      \"--ai-hover\": color || variant ? colors.hover : void 0,\n      \"--ai-hover-color\": color || variant ? colors.hoverColor : void 0,\n      \"--ai-color\": colors.color,\n      \"--ai-bd\": color || variant ? colors.border : void 0\n    }\n  };\n});\nconst ActionIcon = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"ActionIcon\", defaultProps, _props);\n  const {\n    className,\n    unstyled,\n    variant,\n    classNames,\n    styles,\n    style,\n    loading,\n    loaderProps,\n    size,\n    color,\n    radius,\n    __staticSelector,\n    gradient,\n    vars,\n    children,\n    disabled,\n    \"data-disabled\": dataDisabled,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: [\"ActionIcon\", __staticSelector],\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(UnstyledButton, {\n    ...getStyles(\"root\", {\n      active: !disabled && !loading && !dataDisabled\n    }),\n    ...others,\n    unstyled,\n    variant,\n    size,\n    disabled: disabled || loading,\n    ref,\n    mod: [{\n      loading,\n      disabled: disabled || dataDisabled\n    }, mod]\n  }, /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    ...getStyles(\"loader\"),\n    \"aria-hidden\": true\n  }, /* @__PURE__ */React.createElement(Loader, {\n    color: \"var(--ai-color)\",\n    size: \"calc(var(--ai-size) * 0.55)\",\n    ...loaderProps\n  })), /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    mod: {\n      loading\n    },\n    ...getStyles(\"icon\")\n  }, children));\n});\nActionIcon.classes = classes;\nActionIcon.displayName = \"@mantine/core/ActionIcon\";\nActionIcon.Group = ActionIconGroup;\nexport { ActionIcon };","map":null,"metadata":{},"sourceType":"module"}