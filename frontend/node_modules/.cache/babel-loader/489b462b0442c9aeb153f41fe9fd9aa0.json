{"ast":null,"code":"'use client';\n\nimport React, { createContext, useContext, useMemo } from 'react';\nimport { DEFAULT_THEME } from '../default-theme.mjs';\nimport { mergeMantineTheme } from '../merge-mantine-theme/merge-mantine-theme.mjs';\nconst MantineThemeContext = createContext(null);\nconst useSafeMantineTheme = () => useContext(MantineThemeContext) || DEFAULT_THEME;\nfunction useMantineTheme() {\n  const ctx = useContext(MantineThemeContext);\n  if (!ctx) {\n    throw new Error(\"@mantine/core: MantineProvider was not found in component tree, make sure you have it in your app\");\n  }\n  return ctx;\n}\nfunction MantineThemeProvider(_ref) {\n  let {\n    theme,\n    children,\n    inherit = true\n  } = _ref;\n  const parentTheme = useSafeMantineTheme();\n  const mergedTheme = useMemo(() => mergeMantineTheme(inherit ? parentTheme : DEFAULT_THEME, theme), [theme, parentTheme, inherit]);\n  return /* @__PURE__ */React.createElement(MantineThemeContext.Provider, {\n    value: mergedTheme\n  }, children);\n}\nMantineThemeProvider.displayName = \"@mantine/core/MantineThemeProvider\";\nexport { MantineThemeContext, MantineThemeProvider, useMantineTheme, useSafeMantineTheme };","map":null,"metadata":{},"sourceType":"module"}