{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport { getFontSize, getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Input } from '../Input/Input.mjs';\nimport '../Input/InputWrapper/InputWrapper.mjs';\nimport '../Input/InputDescription/InputDescription.mjs';\nimport '../Input/InputError/InputError.mjs';\nimport '../Input/InputLabel/InputLabel.mjs';\nimport '../Input/InputPlaceholder/InputPlaceholder.mjs';\nimport '../Input/InputWrapper.context.mjs';\nimport classes from './InlineInput.module.css.mjs';\nconst InlineInputClasses = classes;\nconst InlineInput = forwardRef((_ref, ref) => {\n  let {\n    __staticSelector,\n    __stylesApiProps,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    children,\n    label,\n    description,\n    id,\n    disabled,\n    error,\n    size,\n    labelPosition = \"left\",\n    variant,\n    style,\n    vars,\n    mod,\n    ...others\n  } = _ref;\n  const getStyles = useStyles({\n    name: __staticSelector,\n    props: __stylesApiProps,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"root\"),\n    ref,\n    __vars: {\n      \"--label-fz\": getFontSize(size),\n      \"--label-lh\": getSize(size, \"label-lh\")\n    },\n    mod: [{\n      \"label-position\": labelPosition\n    }, mod],\n    variant,\n    size,\n    ...others\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"body\")\n  }, children, /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"labelWrapper\"),\n    \"data-disabled\": disabled || void 0\n  }, label && /* @__PURE__ */React.createElement(\"label\", {\n    ...getStyles(\"label\"),\n    \"data-disabled\": disabled || void 0,\n    htmlFor: id\n  }, label), description && /* @__PURE__ */React.createElement(Input.Description, {\n    size,\n    __inheritStyles: false,\n    ...getStyles(\"description\")\n  }, description), error && error !== \"boolean\" && /* @__PURE__ */React.createElement(Input.Error, {\n    size,\n    __inheritStyles: false,\n    ...getStyles(\"error\")\n  }, error))));\n});\nInlineInput.displayName = \"@mantine/core/InlineInput\";\nexport { InlineInput, InlineInputClasses };","map":null,"metadata":{},"sourceType":"module"}