{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { isElement } from '../../core/utils/is-element/is-element.mjs';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Breadcrumbs.module.css.mjs';\nconst defaultProps = {\n  separator: \"/\"\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    separatorMargin\n  } = _ref;\n  return {\n    root: {\n      \"--bc-separator-margin\": getSpacing(separatorMargin)\n    }\n  };\n});\nconst Breadcrumbs = factory((_props, ref) => {\n  const props = useProps(\"Breadcrumbs\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    separator,\n    separatorMargin,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Breadcrumbs\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const items = React.Children.toArray(children).reduce((acc, child, index, array) => {\n    var _child$props;\n    const item = isElement(child) ? React.cloneElement(child, {\n      ...getStyles(\"breadcrumb\", {\n        className: (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.className\n      }),\n      key: index\n    }) : /* @__PURE__ */React.createElement(\"div\", {\n      ...getStyles(\"breadcrumb\"),\n      key: index\n    }, child);\n    acc.push(item);\n    if (index !== array.length - 1) {\n      acc.push( /* @__PURE__ */React.createElement(Box, {\n        ...getStyles(\"separator\"),\n        key: \"separator-\".concat(index)\n      }, separator));\n    }\n    return acc;\n  }, []);\n  return /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    ...others\n  }, items);\n});\nBreadcrumbs.classes = classes;\nBreadcrumbs.displayName = \"@mantine/core/Breadcrumbs\";\nexport { Breadcrumbs };","map":null,"metadata":{},"sourceType":"module"}