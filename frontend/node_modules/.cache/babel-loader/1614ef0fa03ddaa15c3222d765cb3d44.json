{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useAppShellContext } from '../AppShell.context.mjs';\nimport classes from '../AppShell.module.css.mjs';\nconst defaultProps = {};\nconst AppShellNavbar = factory((_props, ref) => {\n  const props = useProps(\"AppShellNavbar\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    withBorder,\n    zIndex,\n    mod,\n    ...others\n  } = props;\n  const ctx = useAppShellContext();\n  if (ctx.disabled) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(Box, {\n    component: \"nav\",\n    ref,\n    mod: [{\n      \"with-border\": withBorder !== null && withBorder !== void 0 ? withBorder : ctx.withBorder\n    }, mod],\n    ...ctx.getStyles(\"navbar\", {\n      className,\n      classNames,\n      styles,\n      style\n    }),\n    ...others,\n    __vars: {\n      \"--app-shell-navbar-z-index\": \"calc(\".concat(zIndex !== null && zIndex !== void 0 ? zIndex : ctx.zIndex, \" + 1)\")\n    }\n  });\n});\nAppShellNavbar.classes = classes;\nAppShellNavbar.displayName = \"@mantine/core/AppShellNavbar\";\nexport { AppShellNavbar };","map":null,"metadata":{},"sourceType":"module"}