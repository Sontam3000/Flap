{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport { getThemeColor } from '../../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../../Checkbox/Checkbox.mjs';\nimport '../../Checkbox/CheckboxGroup/CheckboxGroup.mjs';\nimport { CheckIcon } from '../../Checkbox/CheckIcon.mjs';\nimport { Loader } from '../../Loader/Loader.mjs';\nimport '../../Transition/transitions.mjs';\nimport { Transition } from '../../Transition/Transition.mjs';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.mjs';\nimport { useStepperContext } from '../Stepper.context.mjs';\nimport classes from '../Stepper.module.css.mjs';\nconst getStepFragment = (Fragment, step) => {\n  if (typeof Fragment === \"function\") {\n    return /* @__PURE__ */React.createElement(Fragment, {\n      step: step || 0\n    });\n  }\n  return Fragment;\n};\nconst defaultProps = {\n  withIcon: true,\n  allowStepClick: true,\n  iconPosition: \"left\"\n};\nconst StepperStep = factory((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    step,\n    state,\n    color,\n    icon,\n    completedIcon,\n    progressIcon,\n    label,\n    description,\n    withIcon,\n    iconSize,\n    loading,\n    allowStepClick,\n    allowStepSelect,\n    iconPosition,\n    orientation,\n    mod,\n    ...others\n  } = useProps(\"StepperStep\", defaultProps, props);\n  const ctx = useStepperContext();\n  const theme = useMantineTheme();\n  const stylesApi = {\n    classNames,\n    styles\n  };\n  const _icon = state === \"stepCompleted\" ? null : state === \"stepProgress\" ? progressIcon : icon;\n  const dataAttributes = {\n    \"data-progress\": state === \"stepProgress\" || void 0,\n    \"data-completed\": state === \"stepCompleted\" || void 0\n  };\n  return /* @__PURE__ */React.createElement(UnstyledButton, {\n    ...ctx.getStyles(\"step\", {\n      className,\n      style,\n      variant: ctx.orientation,\n      ...stylesApi\n    }),\n    mod: [{\n      \"icon-position\": iconPosition || ctx.iconPosition,\n      \"allow-click\": allowStepClick\n    }, mod],\n    ref,\n    ...dataAttributes,\n    ...others,\n    __vars: {\n      \"--step-color\": color ? getThemeColor(color, theme) : void 0\n    },\n    tabIndex: allowStepClick ? 0 : -1\n  }, withIcon && /* @__PURE__ */React.createElement(\"span\", {\n    ...ctx.getStyles(\"stepWrapper\", stylesApi)\n  }, /* @__PURE__ */React.createElement(\"span\", {\n    ...ctx.getStyles(\"stepIcon\", stylesApi),\n    ...dataAttributes\n  }, /* @__PURE__ */React.createElement(Transition, {\n    mounted: state === \"stepCompleted\",\n    transition: \"pop\",\n    duration: 200\n  }, transitionStyles => /* @__PURE__ */React.createElement(\"span\", {\n    ...ctx.getStyles(\"stepCompletedIcon\", {\n      style: transitionStyles,\n      ...stylesApi\n    })\n  }, loading ? /* @__PURE__ */React.createElement(Loader, {\n    color: \"var(--mantine-color-white)\",\n    size: \"calc(var(--stepper-icon-size) / 2)\",\n    ...ctx.getStyles(\"stepLoader\", stylesApi)\n  }) : getStepFragment(completedIcon, step) || /* @__PURE__ */React.createElement(CheckIcon, {\n    size: \"60%\"\n  }))), state !== \"stepCompleted\" ? loading ? /* @__PURE__ */React.createElement(Loader, {\n    ...ctx.getStyles(\"stepLoader\", stylesApi),\n    size: \"calc(var(--stepper-icon-size) / 2)\",\n    color\n  }) : getStepFragment(_icon || icon, step) : null), orientation === \"vertical\" && /* @__PURE__ */React.createElement(\"span\", {\n    ...ctx.getStyles(\"verticalSeparator\", stylesApi),\n    \"data-active\": state === \"stepCompleted\" || void 0\n  })), (label || description) && /* @__PURE__ */React.createElement(\"span\", {\n    ...ctx.getStyles(\"stepBody\", stylesApi),\n    \"data-orientation\": ctx.orientation,\n    \"data-icon-position\": iconPosition || ctx.iconPosition\n  }, label && /* @__PURE__ */React.createElement(\"span\", {\n    ...ctx.getStyles(\"stepLabel\", stylesApi)\n  }, getStepFragment(label, step)), description && /* @__PURE__ */React.createElement(\"span\", {\n    ...ctx.getStyles(\"stepDescription\", stylesApi)\n  }, getStepFragment(description, step))));\n});\nStepperStep.classes = classes;\nStepperStep.displayName = \"@mantine/core/StepperStep\";\nexport { StepperStep };","map":null,"metadata":{},"sourceType":"module"}