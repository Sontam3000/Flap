{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ColorSwatch } from '../../ColorSwatch/ColorSwatch.mjs';\nimport { useColorPickerContext } from '../ColorPicker.context.mjs';\nconst Swatches = forwardRef((_ref, ref) => {\n  let {\n    className,\n    datatype,\n    setValue,\n    onChangeEnd,\n    size,\n    focusable,\n    data,\n    swatchesPerRow,\n    ...others\n  } = _ref;\n  const ctx = useColorPickerContext();\n  const colors = data.map((color, index) => /* @__PURE__ */React.createElement(ColorSwatch, {\n    ...ctx.getStyles(\"swatch\"),\n    unstyled: ctx.unstyled,\n    component: \"button\",\n    type: \"button\",\n    color,\n    key: index,\n    radius: \"sm\",\n    onClick: () => {\n      setValue(color);\n      onChangeEnd === null || onChangeEnd === void 0 ? void 0 : onChangeEnd(color);\n    },\n    \"aria-label\": color,\n    tabIndex: focusable ? 0 : -1,\n    \"data-swatch\": true\n  }));\n  return /* @__PURE__ */React.createElement(Box, {\n    ...ctx.getStyles(\"swatches\"),\n    ref,\n    ...others\n  }, colors);\n});\nSwatches.displayName = \"@mantine/core/Swatches\";\nexport { Swatches };","map":null,"metadata":{},"sourceType":"module"}