{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nconst ScrollAreaViewport = forwardRef((_ref, ref) => {\n  let {\n    children,\n    style,\n    ...others\n  } = _ref;\n  const ctx = useScrollAreaContext();\n  const rootRef = useMergedRef(ref, ctx.onViewportChange);\n  return /* @__PURE__ */React.createElement(Box, {\n    ...others,\n    ref: rootRef,\n    style: {\n      overflowX: ctx.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n      overflowY: ctx.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n      ...style\n    }\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      minWidth: \"100%\",\n      display: \"table\"\n    },\n    ref: ctx.onContentChange\n  }, children));\n});\nScrollAreaViewport.displayName = \"@mantine/core/ScrollAreaViewport\";\nexport { ScrollAreaViewport };","map":null,"metadata":{},"sourceType":"module"}