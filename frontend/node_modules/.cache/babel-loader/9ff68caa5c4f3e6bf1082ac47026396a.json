{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport { useId, useWindowEvent, useFocusReturn } from '@mantine/hooks';\nimport { useLockScroll } from './use-lock-scroll.mjs';\nfunction useModal(_ref) {\n  let {\n    id,\n    transitionProps,\n    opened,\n    trapFocus,\n    closeOnEscape,\n    onClose,\n    returnFocus\n  } = _ref;\n  const _id = useId(id);\n  const [titleMounted, setTitleMounted] = useState(false);\n  const [bodyMounted, setBodyMounted] = useState(false);\n  const transitionDuration = typeof (transitionProps === null || transitionProps === void 0 ? void 0 : transitionProps.duration) === \"number\" ? transitionProps === null || transitionProps === void 0 ? void 0 : transitionProps.duration : 200;\n  const shouldLockScroll = useLockScroll({\n    opened,\n    transitionDuration\n  });\n  useWindowEvent(\"keydown\", event => {\n    if (!trapFocus && event.key === \"Escape\" && closeOnEscape) {\n      onClose();\n    }\n  });\n  useFocusReturn({\n    opened,\n    shouldReturnFocus: trapFocus && returnFocus\n  });\n  return {\n    _id,\n    titleMounted,\n    bodyMounted,\n    shouldLockScroll,\n    setTitleMounted,\n    setBodyMounted\n  };\n}\nexport { useModal };","map":null,"metadata":{},"sourceType":"module"}