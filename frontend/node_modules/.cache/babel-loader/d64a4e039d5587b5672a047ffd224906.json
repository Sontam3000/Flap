{"ast":null,"code":"'use client';\n\nimport React, { useRef, useEffect } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport { FileButton } from '../FileButton/FileButton.mjs';\nimport { Input } from '../Input/Input.mjs';\nimport '../Input/InputWrapper/InputWrapper.mjs';\nimport '../Input/InputDescription/InputDescription.mjs';\nimport '../Input/InputError/InputError.mjs';\nimport '../Input/InputLabel/InputLabel.mjs';\nimport '../Input/InputPlaceholder/InputPlaceholder.mjs';\nimport '../Input/InputWrapper.context.mjs';\nimport { InputBase } from '../InputBase/InputBase.mjs';\nconst DefaultValue = _ref => {\n  let {\n    value\n  } = _ref;\n  return /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    }\n  }, Array.isArray(value) ? value.map(file => file.name).join(\", \") : value === null || value === void 0 ? void 0 : value.name);\n};\nconst defaultProps = {\n  valueComponent: DefaultValue\n};\nconst _FileInput = factory((_props, ref) => {\n  const props = useProps(\"FileInput\", defaultProps, _props);\n  const {\n    unstyled,\n    vars,\n    onChange,\n    value,\n    defaultValue,\n    multiple,\n    accept,\n    name,\n    form,\n    valueComponent,\n    clearable,\n    clearButtonProps,\n    readOnly,\n    capture,\n    fileInputProps,\n    rightSection,\n    size,\n    placeholder,\n    ...others\n  } = props;\n  const resetRef = useRef(null);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    onChange,\n    finalValue: multiple ? [] : null\n  });\n  const hasValue = Array.isArray(_value) ? _value.length !== 0 : _value !== null;\n  const _rightSection = rightSection || (clearable && hasValue && !readOnly ? /* @__PURE__ */React.createElement(CloseButton, {\n    ...clearButtonProps,\n    variant: \"subtle\",\n    onClick: () => setValue(multiple ? [] : null),\n    size,\n    unstyled\n  }) : null);\n  useEffect(() => {\n    if (Array.isArray(_value) && _value.length === 0 || _value === null) {\n      var _resetRef$current;\n      (_resetRef$current = resetRef.current) === null || _resetRef$current === void 0 ? void 0 : _resetRef$current.call(resetRef);\n    }\n  }, [_value]);\n  const ValueComponent = valueComponent;\n  return /* @__PURE__ */React.createElement(FileButton, {\n    onChange: setValue,\n    multiple,\n    accept,\n    name,\n    form,\n    resetRef,\n    disabled: readOnly,\n    capture,\n    inputProps: fileInputProps\n  }, fileButtonProps => /* @__PURE__ */React.createElement(InputBase, {\n    component: \"button\",\n    ref,\n    rightSection: _rightSection,\n    ...fileButtonProps,\n    ...others,\n    __staticSelector: \"FileInput\",\n    multiline: true,\n    type: \"button\",\n    pointer: true,\n    __stylesApiProps: props,\n    unstyled,\n    size\n  }, !hasValue ? /* @__PURE__ */React.createElement(Input.Placeholder, null, placeholder) : /* @__PURE__ */React.createElement(ValueComponent, {\n    value: _value\n  })));\n});\n_FileInput.classes = InputBase.classes;\n_FileInput.displayName = \"@mantine/core/FileInput\";\nconst FileInput = _FileInput;\nexport { FileInput };","map":null,"metadata":{},"sourceType":"module"}