{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { usePagination } from '@mantine/hooks';\nimport { getRadius, getSize, getFontSize } from '../../../core/utils/get-size/get-size.mjs';\nimport { createEventHandler } from '../../../core/utils/create-event-handler/create-event-handler.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport { getAutoContrastValue } from '../../../core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { PaginationProvider } from '../Pagination.context.mjs';\nimport classes from '../Pagination.module.css.mjs';\nconst defaultProps = {\n  siblings: 1,\n  boundaries: 1\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    size,\n    radius,\n    color,\n    autoContrast\n  } = _ref;\n  return {\n    root: {\n      \"--pagination-control-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--pagination-control-size\": getSize(size, \"pagination-control-size\"),\n      \"--pagination-control-fz\": getFontSize(size),\n      \"--pagination-active-bg\": color ? getThemeColor(color, theme) : void 0,\n      \"--pagination-active-color\": getAutoContrastValue(autoContrast, theme) ? getContrastColor({\n        color,\n        theme\n      }) : void 0\n    }\n  };\n});\nconst PaginationRoot = factory((_props, ref) => {\n  const props = useProps(\"PaginationRoot\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    total,\n    value,\n    defaultValue,\n    onChange,\n    disabled,\n    siblings,\n    boundaries,\n    color,\n    radius,\n    onNextPage,\n    onPreviousPage,\n    onFirstPage,\n    onLastPage,\n    getItemProps,\n    autoContrast,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Pagination\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const {\n    range,\n    setPage,\n    next,\n    previous,\n    active,\n    first,\n    last\n  } = usePagination({\n    page: value,\n    initialPage: defaultValue,\n    onChange,\n    total,\n    siblings,\n    boundaries\n  });\n  const handleNextPage = createEventHandler(onNextPage, next);\n  const handlePreviousPage = createEventHandler(onPreviousPage, previous);\n  const handleFirstPage = createEventHandler(onFirstPage, first);\n  const handleLastPage = createEventHandler(onLastPage, last);\n  return /* @__PURE__ */React.createElement(PaginationProvider, {\n    value: {\n      total,\n      range,\n      active,\n      disabled,\n      getItemProps,\n      onChange: setPage,\n      onNext: handleNextPage,\n      onPrevious: handlePreviousPage,\n      onFirst: handleFirstPage,\n      onLast: handleLastPage,\n      getStyles\n    }\n  }, /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    ...others\n  }));\n});\nPaginationRoot.classes = classes;\nPaginationRoot.displayName = \"@mantine/core/PaginationRoot\";\nexport { PaginationRoot };","map":null,"metadata":{},"sourceType":"module"}