{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useId } from '@mantine/hooks';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport classes from './Alert.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    radius,\n    color,\n    variant,\n    autoContrast\n  } = _ref;\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"light\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--alert-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--alert-bg\": color || variant ? colors.background : void 0,\n      \"--alert-color\": colors.color,\n      \"--alert-bd\": color || variant ? colors.border : void 0\n    }\n  };\n});\nconst Alert = factory((_props, ref) => {\n  const props = useProps(\"Alert\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    title,\n    children,\n    id,\n    icon,\n    withCloseButton,\n    onClose,\n    closeButtonLabel,\n    variant,\n    autoContrast,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Alert\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const rootId = useId(id);\n  const titleId = title && \"\".concat(rootId, \"-title\") || void 0;\n  const bodyId = \"\".concat(rootId, \"-body\");\n  return /* @__PURE__ */React.createElement(Box, {\n    id: rootId,\n    ...getStyles(\"root\", {\n      variant\n    }),\n    variant,\n    ref,\n    ...others,\n    role: \"alert\",\n    \"aria-describedby\": bodyId,\n    \"aria-labelledby\": titleId\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"wrapper\")\n  }, icon && /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"icon\")\n  }, icon), /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"body\")\n  }, title && /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"title\"),\n    \"data-with-close-button\": withCloseButton || void 0\n  }, /* @__PURE__ */React.createElement(\"span\", {\n    id: titleId,\n    ...getStyles(\"label\")\n  }, title)), children && /* @__PURE__ */React.createElement(\"div\", {\n    id: bodyId,\n    ...getStyles(\"message\"),\n    \"data-variant\": variant\n  }, children)), withCloseButton && /* @__PURE__ */React.createElement(CloseButton, {\n    ...getStyles(\"closeButton\"),\n    onClick: onClose,\n    variant: \"transparent\",\n    size: 16,\n    iconSize: 16,\n    \"aria-label\": closeButtonLabel,\n    unstyled\n  })));\n});\nAlert.classes = classes;\nAlert.displayName = \"@mantine/core/Alert\";\nexport { Alert };","map":null,"metadata":{},"sourceType":"module"}