{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../Accordion/Accordion.mjs';\nimport { AccordionChevron } from '../Accordion/AccordionChevron.mjs';\nimport '../Accordion/AccordionItem/AccordionItem.mjs';\nimport '../Accordion/AccordionPanel/AccordionPanel.mjs';\nimport '../Accordion/AccordionControl/AccordionControl.mjs';\nimport { Collapse } from '../Collapse/Collapse.mjs';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.mjs';\nimport classes from './NavLink.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    variant,\n    color,\n    childrenOffset,\n    autoContrast\n  } = _ref;\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"light\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--nl-bg\": color || variant ? colors.background : void 0,\n      \"--nl-hover\": color || variant ? colors.hover : void 0,\n      \"--nl-color\": color || variant ? colors.color : void 0\n    },\n    children: {\n      \"--nl-offset\": getSpacing(childrenOffset)\n    }\n  };\n});\nconst NavLink = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"NavLink\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    opened,\n    defaultOpened,\n    onChange,\n    children,\n    onClick,\n    active,\n    disabled,\n    leftSection,\n    rightSection,\n    label,\n    description,\n    disableRightSectionRotation,\n    noWrap,\n    childrenOffset,\n    onKeyDown,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"NavLink\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange\n  });\n  const withChildren = !!children;\n  const handleClick = event => {\n    onClick === null || onClick === void 0 ? void 0 : onClick(event);\n    if (withChildren) {\n      event.preventDefault();\n      setOpened(!_opened);\n    }\n  };\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(UnstyledButton, {\n    ...getStyles(\"root\"),\n    component: \"a\",\n    ref,\n    onClick: handleClick,\n    onKeyDown: event => {\n      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n      if (event.nativeEvent.code === \"Space\" && withChildren) {\n        event.preventDefault();\n        setOpened(!_opened);\n      }\n    },\n    unstyled,\n    mod: [{\n      disabled,\n      active,\n      expanded: _opened\n    }, mod],\n    ...others\n  }, leftSection && /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    ...getStyles(\"section\"),\n    mod: {\n      position: \"left\"\n    }\n  }, leftSection), /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"body\"),\n    mod: {\n      \"no-wrap\": noWrap\n    }\n  }, /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    ...getStyles(\"label\")\n  }, label), /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    mod: {\n      active\n    },\n    ...getStyles(\"description\")\n  }, description)), (withChildren || rightSection) && /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"section\"),\n    component: \"span\",\n    mod: {\n      rotate: _opened && !disableRightSectionRotation,\n      position: \"right\"\n    }\n  }, withChildren ? rightSection || /* @__PURE__ */React.createElement(AccordionChevron, {\n    ...getStyles(\"chevron\")\n  }) : rightSection)), /* @__PURE__ */React.createElement(Collapse, {\n    in: _opened,\n    ...getStyles(\"collapse\")\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"children\")\n  }, children)));\n});\nNavLink.classes = classes;\nNavLink.displayName = \"@mantine/core/NavLink\";\nexport { NavLink };","map":null,"metadata":{},"sourceType":"module"}