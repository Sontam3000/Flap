{"ast":null,"code":"import { deepMerge } from '../../utils/deep-merge/deep-merge.mjs';\nimport 'react';\nimport '@mantine/hooks';\nconst INVALID_PRIMARY_COLOR_ERROR = \"[@mantine/core] MantineProvider: Invalid theme.primaryColor, it accepts only key of theme.colors, learn more \\u2013 https://mantine.dev/theming/colors/#primary-color\";\nconst INVALID_PRIMARY_SHADE_ERROR = \"[@mantine/core] MantineProvider: Invalid theme.primaryShade, it accepts only 0-9 integers or an object { light: 0-9, dark: 0-9 }\";\nfunction isValidPrimaryShade(shade) {\n  if (shade < 0 || shade > 9) {\n    return false;\n  }\n  return parseInt(shade.toString(), 10) === shade;\n}\nfunction validateMantineTheme(theme) {\n  if (!(theme.primaryColor in theme.colors)) {\n    throw new Error(INVALID_PRIMARY_COLOR_ERROR);\n  }\n  if (typeof theme.primaryShade === \"object\") {\n    if (!isValidPrimaryShade(theme.primaryShade.dark) || !isValidPrimaryShade(theme.primaryShade.light)) {\n      throw new Error(INVALID_PRIMARY_SHADE_ERROR);\n    }\n  }\n  if (typeof theme.primaryShade === \"number\" && !isValidPrimaryShade(theme.primaryShade)) {\n    throw new Error(INVALID_PRIMARY_SHADE_ERROR);\n  }\n}\nfunction mergeMantineTheme(currentTheme, themeOverride) {\n  var _themeOverride$headin;\n  if (!themeOverride) {\n    validateMantineTheme(currentTheme);\n    return currentTheme;\n  }\n  const result = deepMerge(currentTheme, themeOverride);\n  if (themeOverride.fontFamily && !((_themeOverride$headin = themeOverride.headings) === null || _themeOverride$headin === void 0 ? void 0 : _themeOverride$headin.fontFamily)) {\n    result.headings.fontFamily = themeOverride.fontFamily;\n  }\n  validateMantineTheme(result);\n  return result;\n}\nexport { INVALID_PRIMARY_COLOR_ERROR, INVALID_PRIMARY_SHADE_ERROR, mergeMantineTheme, validateMantineTheme };","map":null,"metadata":{},"sourceType":"module"}