{"ast":null,"code":"'use client';\n\nimport { getThumbSize } from './get-thumb-size.mjs';\nimport { linearScale } from './linear-scale.mjs';\nfunction clamp(value, _ref) {\n  let [min, max] = _ref;\n  return Math.min(max, Math.max(min, value));\n}\nfunction getThumbOffsetFromScroll(scrollPos, sizes) {\n  let dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"ltr\";\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\nexport { getThumbOffsetFromScroll };","map":null,"metadata":{},"sourceType":"module"}