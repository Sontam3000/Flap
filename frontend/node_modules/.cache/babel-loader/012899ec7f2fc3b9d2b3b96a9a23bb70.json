{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Affix } from '../Affix/Affix.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport { Paper } from '../Paper/Paper.mjs';\nimport '../Transition/transitions.mjs';\nimport { Transition } from '../Transition/Transition.mjs';\nimport classes from './Dialog.module.css.mjs';\nconst defaultProps = {\n  shadow: \"md\",\n  p: \"md\",\n  withBorder: false,\n  transitionProps: {\n    transition: \"pop-top-right\",\n    duration: 200\n  },\n  position: {\n    bottom: 30,\n    right: 30\n  }\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    size\n  } = _ref;\n  return {\n    root: {\n      \"--dialog-size\": getSize(size, \"dialog-size\")\n    }\n  };\n});\nconst Dialog = factory((_props, ref) => {\n  const props = useProps(\"Dialog\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    zIndex,\n    position,\n    keepMounted,\n    opened,\n    transitionProps,\n    withCloseButton,\n    withinPortal,\n    children,\n    onClose,\n    portalProps,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Dialog\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Affix, {\n    zIndex,\n    position,\n    ref,\n    withinPortal,\n    portalProps,\n    unstyled\n  }, /* @__PURE__ */React.createElement(Transition, {\n    keepMounted,\n    mounted: opened,\n    ...transitionProps\n  }, transitionStyles => /* @__PURE__ */React.createElement(Paper, {\n    unstyled,\n    ...getStyles(\"root\", {\n      style: transitionStyles\n    }),\n    ...others\n  }, withCloseButton && /* @__PURE__ */React.createElement(CloseButton, {\n    onClick: onClose,\n    unstyled,\n    ...getStyles(\"closeButton\")\n  }), children)));\n});\nDialog.classes = classes;\nDialog.displayName = \"@mantine/core/Dialog\";\nexport { Dialog };","map":null,"metadata":{},"sourceType":"module"}