{"ast":null,"code":"'use client';\n\nimport 'react';\nimport '@mantine/hooks';\nimport { useMantineClassNamesPrefix } from '../../MantineProvider/Mantine.context.mjs';\nimport '../../MantineProvider/default-theme.mjs';\nimport '../../MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { getClassName } from './get-class-name/get-class-name.mjs';\nimport { getStyle } from './get-style/get-style.mjs';\nfunction useStyles(_ref) {\n  let {\n    name,\n    classes,\n    props,\n    stylesCtx,\n    className,\n    style,\n    rootSelector = \"root\",\n    unstyled,\n    classNames,\n    styles,\n    vars,\n    varsResolver\n  } = _ref;\n  const theme = useMantineTheme();\n  const classNamesPrefix = useMantineClassNamesPrefix();\n  const themeName = (Array.isArray(name) ? name : [name]).filter(n => n);\n  return (selector, options) => ({\n    className: getClassName({\n      theme,\n      options,\n      themeName,\n      selector,\n      classNamesPrefix,\n      classNames,\n      classes,\n      unstyled,\n      className,\n      rootSelector,\n      props,\n      stylesCtx\n    }),\n    style: getStyle({\n      theme,\n      themeName,\n      selector,\n      options,\n      props,\n      stylesCtx,\n      rootSelector,\n      styles,\n      style,\n      vars,\n      varsResolver\n    })\n  });\n}\nexport { useStyles };","map":null,"metadata":{},"sourceType":"module"}