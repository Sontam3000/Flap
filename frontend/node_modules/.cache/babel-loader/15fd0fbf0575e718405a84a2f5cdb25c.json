{"ast":null,"code":"'use client';\n\nimport { cloneElement } from 'react';\nimport cx from 'clsx';\nimport { useMergedRef } from '@mantine/hooks';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { usePopoverContext } from '../Popover.context.mjs';\nconst defaultProps = {\n  refProp: \"ref\",\n  popupType: \"dialog\"\n};\nconst PopoverTarget = factory((props, ref) => {\n  const {\n    children,\n    refProp,\n    popupType,\n    ...others\n  } = useProps(\"PopoverTarget\", defaultProps, props);\n  if (!isElement(children)) {\n    throw new Error(\"Popover.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  const forwardedProps = others;\n  const ctx = usePopoverContext();\n  const targetRef = useMergedRef(ctx.reference, children.ref, ref);\n  const accessibleProps = ctx.withRoles ? {\n    \"aria-haspopup\": popupType,\n    \"aria-expanded\": ctx.opened,\n    \"aria-controls\": ctx.getDropdownId(),\n    id: ctx.getTargetId()\n  } : {};\n  return cloneElement(children, {\n    ...forwardedProps,\n    ...accessibleProps,\n    ...ctx.targetProps,\n    className: cx(ctx.targetProps.className, forwardedProps.className, children.props.className),\n    [refProp]: targetRef,\n    ...(!ctx.controlled ? {\n      onClick: ctx.onToggle\n    } : null)\n  });\n});\nPopoverTarget.displayName = \"@mantine/core/PopoverTarget\";\nexport { PopoverTarget };","map":null,"metadata":{},"sourceType":"module"}