{"ast":null,"code":"function getTransformedScaledValue(value) {\n  var _value$match;\n  if (typeof value !== \"string\" || !value.includes(\"var(--mantine-scale)\")) {\n    return value;\n  }\n  return (_value$match = value.match(/^calc\\((.*?)\\)$/)) === null || _value$match === void 0 ? void 0 : _value$match[1].split(\"*\")[0].trim();\n}\nfunction px(value) {\n  const transformedValue = getTransformedScaledValue(value);\n  if (typeof transformedValue === \"number\") {\n    return transformedValue;\n  }\n  if (typeof transformedValue === \"string\") {\n    if (transformedValue.includes(\"calc\") || transformedValue.includes(\"var\")) {\n      return transformedValue;\n    }\n    if (transformedValue.includes(\"px\")) {\n      return Number(transformedValue.replace(\"px\", \"\"));\n    }\n    if (transformedValue.includes(\"rem\")) {\n      return Number(transformedValue.replace(\"rem\", \"\")) * 16;\n    }\n    if (transformedValue.includes(\"em\")) {\n      return Number(transformedValue.replace(\"em\", \"\")) * 16;\n    }\n    return Number(transformedValue);\n  }\n  return NaN;\n}\nexport { px };","map":null,"metadata":{},"sourceType":"module"}