{"ast":null,"code":"'use client';\n\nimport React, { useState } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InputBase } from '../InputBase/InputBase.mjs';\nimport { Textarea } from '../Textarea/Textarea.mjs';\nimport { validateJson } from './validate-json/validate-json.mjs';\nconst defaultProps = {\n  serialize: JSON.stringify,\n  deserialize: JSON.parse\n};\nconst JsonInput = factory((props, ref) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    formatOnBlur,\n    validationError,\n    serialize,\n    deserialize,\n    onFocus,\n    onBlur,\n    readOnly,\n    error,\n    ...others\n  } = useProps(\"JsonInput\", defaultProps, props);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"\",\n    onChange\n  });\n  const [valid, setValid] = useState(validateJson(_value, deserialize));\n  const handleFocus = event => {\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n    setValid(true);\n  };\n  const handleBlur = event => {\n    typeof onBlur === \"function\" && onBlur(event);\n    const isValid = validateJson(event.currentTarget.value, deserialize);\n    formatOnBlur && !readOnly && isValid && event.currentTarget.value.trim() !== \"\" && setValue(serialize(deserialize(event.currentTarget.value), null, 2));\n    setValid(isValid);\n  };\n  return /* @__PURE__ */React.createElement(Textarea, {\n    value: _value,\n    onChange: event => setValue(event.currentTarget.value),\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref,\n    readOnly,\n    ...others,\n    autoComplete: \"off\",\n    __staticSelector: \"JsonInput\",\n    error: valid ? error : validationError || true,\n    \"data-monospace\": true\n  });\n});\nJsonInput.classes = InputBase.classes;\nJsonInput.displayName = \"@mantine/core/JsonInput\";\nexport { JsonInput };","map":null,"metadata":{},"sourceType":"module"}