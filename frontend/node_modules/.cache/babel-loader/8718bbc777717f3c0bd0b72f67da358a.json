{"ast":null,"code":"'use client';\n\nimport React, { useState } from 'react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { getContextItemIndex } from '../../core/utils/get-context-item-index/get-context-item-index.mjs';\nimport { useHovered } from '../../core/utils/use-hovered/use-hovered.mjs';\nimport 'clsx';\nimport { useResolvedStylesApi } from '../../core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useDelayedHover } from '../Floating/use-delayed-hover.mjs';\nimport '@floating-ui/react';\nimport '../Floating/FloatingArrow/FloatingArrow.mjs';\nimport { Popover } from '../Popover/Popover.mjs';\nimport '../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { MenuContextProvider } from './Menu.context.mjs';\nimport { MenuDivider } from './MenuDivider/MenuDivider.mjs';\nimport { MenuDropdown } from './MenuDropdown/MenuDropdown.mjs';\nimport { MenuItem } from './MenuItem/MenuItem.mjs';\nimport { MenuLabel } from './MenuLabel/MenuLabel.mjs';\nimport { MenuTarget } from './MenuTarget/MenuTarget.mjs';\nimport classes from './Menu.module.css.mjs';\nconst defaultProps = {\n  trapFocus: true,\n  closeOnItemClick: true,\n  clickOutsideEvents: [\"mousedown\", \"touchstart\", \"keydown\"],\n  loop: true,\n  trigger: \"click\",\n  openDelay: 0,\n  closeDelay: 100,\n  menuItemTabIndex: -1\n};\nfunction Menu(_props) {\n  const props = useProps(\"Menu\", defaultProps, _props);\n  const {\n    children,\n    onOpen,\n    onClose,\n    opened,\n    defaultOpened,\n    trapFocus,\n    onChange,\n    closeOnItemClick,\n    loop,\n    closeOnEscape,\n    trigger,\n    openDelay,\n    closeDelay,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    menuItemTabIndex,\n    keepMounted,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Menu\",\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled\n  });\n  const [hovered, {\n    setHovered,\n    resetHovered\n  }] = useHovered();\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange\n  });\n  const [openedViaClick, setOpenedViaClick] = useState(false);\n  const close = () => {\n    setOpened(false);\n    setOpenedViaClick(false);\n    _opened && (onClose === null || onClose === void 0 ? void 0 : onClose());\n  };\n  const open = () => {\n    setOpened(true);\n    !_opened && (onOpen === null || onOpen === void 0 ? void 0 : onOpen());\n  };\n  const toggleDropdown = () => {\n    _opened ? close() : open();\n  };\n  const {\n    openDropdown,\n    closeDropdown\n  } = useDelayedHover({\n    open,\n    close,\n    closeDelay,\n    openDelay\n  });\n  const getItemIndex = node => getContextItemIndex(\"[data-menu-item]\", \"[data-menu-dropdown]\", node);\n  const {\n    resolvedClassNames,\n    resolvedStyles\n  } = useResolvedStylesApi({\n    classNames,\n    styles,\n    props\n  });\n  useDidUpdate(() => {\n    resetHovered();\n  }, [_opened]);\n  return /* @__PURE__ */React.createElement(MenuContextProvider, {\n    value: {\n      getStyles,\n      opened: _opened,\n      toggleDropdown,\n      getItemIndex,\n      hovered,\n      setHovered,\n      openedViaClick,\n      setOpenedViaClick,\n      closeOnItemClick,\n      closeDropdown: trigger === \"click\" ? close : closeDropdown,\n      openDropdown: trigger === \"click\" ? open : openDropdown,\n      closeDropdownImmediately: close,\n      loop,\n      trigger,\n      unstyled,\n      menuItemTabIndex\n    }\n  }, /* @__PURE__ */React.createElement(Popover, {\n    ...others,\n    opened: _opened,\n    onChange: toggleDropdown,\n    defaultOpened,\n    trapFocus: keepMounted ? false : trapFocus,\n    closeOnEscape,\n    __staticSelector: \"Menu\",\n    classNames: resolvedClassNames,\n    styles: resolvedStyles,\n    unstyled,\n    variant,\n    keepMounted\n  }, children));\n}\nMenu.extend = input => input;\nMenu.classes = classes;\nMenu.displayName = \"@mantine/core/Menu\";\nMenu.Item = MenuItem;\nMenu.Label = MenuLabel;\nMenu.Dropdown = MenuDropdown;\nMenu.Target = MenuTarget;\nMenu.Divider = MenuDivider;\nexport { Menu };","map":null,"metadata":{},"sourceType":"module"}