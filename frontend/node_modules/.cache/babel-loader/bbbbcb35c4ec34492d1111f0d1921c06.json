{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Curve } from './Curve/Curve.mjs';\nimport { getCurves } from './get-curves/get-curves.mjs';\nimport classes from './RingProgress.module.css.mjs';\nfunction getClampedThickness(thickness, size) {\n  return Math.min(thickness || 12, (size || 120) / 4);\n}\nconst defaultProps = {\n  size: 120,\n  thickness: 12\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    size,\n    thickness\n  } = _ref;\n  return {\n    root: {\n      \"--rp-size\": rem(size),\n      \"--rp-label-offset\": rem(thickness * 2)\n    }\n  };\n});\nconst RingProgress = factory((_props, ref) => {\n  const props = useProps(\"RingProgress\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    label,\n    sections,\n    size,\n    thickness,\n    roundCaps,\n    rootColor,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"RingProgress\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const clampedThickness = getClampedThickness(thickness, size);\n  const curves = getCurves({\n    size,\n    thickness: clampedThickness,\n    sections,\n    renderRoundedLineCaps: roundCaps,\n    rootColor\n  }).map((_ref2, index) => {\n    let {\n      data,\n      sum,\n      root,\n      lineRoundCaps,\n      offset\n    } = _ref2;\n    return /* @__PURE__ */React.createElement(Curve, {\n      ...data,\n      key: index,\n      size,\n      thickness: clampedThickness,\n      sum,\n      offset,\n      color: data === null || data === void 0 ? void 0 : data.color,\n      root,\n      lineRoundCaps,\n      getStyles\n    });\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"root\"),\n    size,\n    ref,\n    ...others\n  }, /* @__PURE__ */React.createElement(\"svg\", {\n    ...getStyles(\"svg\")\n  }, curves), label && /* @__PURE__ */React.createElement(\"div\", {\n    ...getStyles(\"label\")\n  }, label));\n});\nRingProgress.classes = classes;\nRingProgress.displayName = \"@mantine/core/RingProgress\";\nexport { RingProgress };","map":null,"metadata":{},"sourceType":"module"}