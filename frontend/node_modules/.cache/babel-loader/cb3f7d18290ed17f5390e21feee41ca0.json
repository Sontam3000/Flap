{"ast":null,"code":"'use client';\n\nimport { findElementAncestor } from '../find-element-ancestor/find-element-ancestor.mjs';\nfunction getPreviousIndex(current, elements, loop) {\n  for (let i = current - 1; i >= 0; i -= 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n  if (loop) {\n    for (let i = elements.length - 1; i > -1; i -= 1) {\n      if (!elements[i].disabled) {\n        return i;\n      }\n    }\n  }\n  return current;\n}\nfunction getNextIndex(current, elements, loop) {\n  for (let i = current + 1; i < elements.length; i += 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n  if (loop) {\n    for (let i = 0; i < elements.length; i += 1) {\n      if (!elements[i].disabled) {\n        return i;\n      }\n    }\n  }\n  return current;\n}\nfunction onSameLevel(target, sibling, parentSelector) {\n  return findElementAncestor(target, parentSelector) === findElementAncestor(sibling, parentSelector);\n}\nfunction createScopedKeydownHandler(_ref) {\n  let {\n    parentSelector,\n    siblingSelector,\n    onKeyDown,\n    loop = true,\n    activateOnFocus = false,\n    dir = \"rtl\",\n    orientation\n  } = _ref;\n  return event => {\n    var _findElementAncestor;\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n    const elements = Array.from(((_findElementAncestor = findElementAncestor(event.currentTarget, parentSelector)) === null || _findElementAncestor === void 0 ? void 0 : _findElementAncestor.querySelectorAll(siblingSelector)) || []).filter(node => onSameLevel(event.currentTarget, node, parentSelector));\n    const current = elements.findIndex(el => event.currentTarget === el);\n    const _nextIndex = getNextIndex(current, elements, loop);\n    const _previousIndex = getPreviousIndex(current, elements, loop);\n    const nextIndex = dir === \"rtl\" ? _previousIndex : _nextIndex;\n    const previousIndex = dir === \"rtl\" ? _nextIndex : _previousIndex;\n    switch (event.key) {\n      case \"ArrowRight\":\n        {\n          if (orientation === \"horizontal\") {\n            event.stopPropagation();\n            event.preventDefault();\n            elements[nextIndex].focus();\n            activateOnFocus && elements[nextIndex].click();\n          }\n          break;\n        }\n      case \"ArrowLeft\":\n        {\n          if (orientation === \"horizontal\") {\n            event.stopPropagation();\n            event.preventDefault();\n            elements[previousIndex].focus();\n            activateOnFocus && elements[previousIndex].click();\n          }\n          break;\n        }\n      case \"ArrowUp\":\n        {\n          if (orientation === \"vertical\") {\n            event.stopPropagation();\n            event.preventDefault();\n            elements[_previousIndex].focus();\n            activateOnFocus && elements[_previousIndex].click();\n          }\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          if (orientation === \"vertical\") {\n            event.stopPropagation();\n            event.preventDefault();\n            elements[_nextIndex].focus();\n            activateOnFocus && elements[_nextIndex].click();\n          }\n          break;\n        }\n      case \"Home\":\n        {\n          event.stopPropagation();\n          event.preventDefault();\n          !elements[0].disabled && elements[0].focus();\n          break;\n        }\n      case \"End\":\n        {\n          event.stopPropagation();\n          event.preventDefault();\n          const last = elements.length - 1;\n          !elements[last].disabled && elements[last].focus();\n          break;\n        }\n    }\n  };\n}\nexport { createScopedKeydownHandler };","map":null,"metadata":{},"sourceType":"module"}