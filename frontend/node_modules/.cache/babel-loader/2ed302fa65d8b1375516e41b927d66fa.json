{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../Portal/Portal.mjs';\nimport { OptionalPortal } from '../Portal/OptionalPortal.mjs';\nimport classes from './Affix.module.css.mjs';\nconst defaultProps = {\n  position: {\n    bottom: 0,\n    right: 0\n  },\n  zIndex: getDefaultZIndex(\"modal\"),\n  withinPortal: true\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    zIndex,\n    position\n  } = _ref;\n  return {\n    root: {\n      \"--affix-z-index\": zIndex === null || zIndex === void 0 ? void 0 : zIndex.toString(),\n      \"--affix-top\": rem(position === null || position === void 0 ? void 0 : position.top),\n      \"--affix-left\": rem(position === null || position === void 0 ? void 0 : position.left),\n      \"--affix-bottom\": rem(position === null || position === void 0 ? void 0 : position.bottom),\n      \"--affix-right\": rem(position === null || position === void 0 ? void 0 : position.right)\n    }\n  };\n});\nconst Affix = factory((_props, ref) => {\n  const props = useProps(\"Affix\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    portalProps,\n    zIndex,\n    withinPortal,\n    position,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Affix\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(OptionalPortal, {\n    ...portalProps,\n    withinPortal\n  }, /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    ...others\n  }));\n});\nAffix.classes = classes;\nAffix.displayName = \"@mantine/core/Affix\";\nexport { Affix };","map":null,"metadata":{},"sourceType":"module"}