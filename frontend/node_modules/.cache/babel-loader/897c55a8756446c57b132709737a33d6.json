{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nconst defaultProps = {\n  refProp: \"ref\"\n};\nconst ComboboxDropdownTarget = factory((props, ref) => {\n  const {\n    children,\n    refProp\n  } = useProps(\"ComboboxDropdownTarget\", defaultProps, props);\n  useComboboxContext();\n  if (!isElement(children)) {\n    throw new Error(\"Combobox.DropdownTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  return /* @__PURE__ */React.createElement(Popover.Target, {\n    ref,\n    refProp\n  }, children);\n});\nComboboxDropdownTarget.displayName = \"@mantine/core/ComboboxDropdownTarget\";\nexport { ComboboxDropdownTarget };","map":null,"metadata":{},"sourceType":"module"}