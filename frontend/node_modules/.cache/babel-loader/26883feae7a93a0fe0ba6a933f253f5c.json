{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport { getShadow, getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../Portal/Portal.mjs';\nimport { OptionalPortal } from '../Portal/OptionalPortal.mjs';\nimport { ModalBaseProvider } from './ModalBase.context.mjs';\nimport { useModal } from './use-modal.mjs';\nconst ModalBase = forwardRef((_ref, ref) => {\n  let {\n    keepMounted,\n    opened,\n    onClose,\n    id,\n    transitionProps,\n    trapFocus,\n    closeOnEscape,\n    returnFocus,\n    closeOnClickOutside,\n    withinPortal,\n    portalProps,\n    lockScroll,\n    children,\n    zIndex,\n    shadow,\n    padding,\n    __vars,\n    unstyled,\n    removeScrollProps,\n    ...others\n  } = _ref;\n  const {\n    _id,\n    titleMounted,\n    bodyMounted,\n    shouldLockScroll,\n    setTitleMounted,\n    setBodyMounted\n  } = useModal({\n    id,\n    transitionProps,\n    opened,\n    trapFocus,\n    closeOnEscape,\n    onClose,\n    returnFocus\n  });\n  return /* @__PURE__ */React.createElement(OptionalPortal, {\n    ...portalProps,\n    withinPortal\n  }, /* @__PURE__ */React.createElement(ModalBaseProvider, {\n    value: {\n      opened,\n      onClose,\n      closeOnClickOutside,\n      transitionProps: {\n        ...transitionProps,\n        keepMounted\n      },\n      getTitleId: () => \"\".concat(_id, \"-title\"),\n      getBodyId: () => \"\".concat(_id, \"-body\"),\n      titleMounted,\n      bodyMounted,\n      setTitleMounted,\n      setBodyMounted,\n      trapFocus,\n      closeOnEscape,\n      zIndex,\n      unstyled\n    }\n  }, /* @__PURE__ */React.createElement(RemoveScroll, {\n    enabled: shouldLockScroll && lockScroll,\n    ...removeScrollProps\n  }, /* @__PURE__ */React.createElement(Box, {\n    ref,\n    ...others,\n    __vars: {\n      ...__vars,\n      \"--mb-z-index\": (zIndex || getDefaultZIndex(\"modal\")).toString(),\n      \"--mb-shadow\": getShadow(shadow),\n      \"--mb-padding\": getSpacing(padding)\n    }\n  }, children))));\n});\nexport { ModalBase };","map":null,"metadata":{},"sourceType":"module"}