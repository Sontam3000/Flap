{"ast":null,"code":"'use client';\n\nimport React, { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { createEventHandler } from '../../../core/utils/create-event-handler/create-event-handler.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useMenuContext } from '../Menu.context.mjs';\nimport classes from '../Menu.module.css.mjs';\nconst defaultProps = {};\nconst MenuDropdown = factory((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onMouseEnter,\n    onMouseLeave,\n    children,\n    ...others\n  } = useProps(\"MenuDropdown\", defaultProps, props);\n  const wrapperRef = useRef(null);\n  const ctx = useMenuContext();\n  const handleKeyDown = event => {\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      var _wrapperRef$current, _wrapperRef$current$q;\n      event.preventDefault();\n      (_wrapperRef$current = wrapperRef.current) === null || _wrapperRef$current === void 0 ? void 0 : (_wrapperRef$current$q = _wrapperRef$current.querySelectorAll(\"[data-menu-item]:not(:disabled)\")[0]) === null || _wrapperRef$current$q === void 0 ? void 0 : _wrapperRef$current$q.focus();\n    }\n  };\n  const handleMouseEnter = createEventHandler(onMouseEnter, () => (ctx.trigger === \"hover\" || ctx.trigger === \"click-hover\") && ctx.openDropdown());\n  const handleMouseLeave = createEventHandler(onMouseLeave, () => (ctx.trigger === \"hover\" || ctx.trigger === \"click-hover\") && ctx.closeDropdown());\n  return /* @__PURE__ */React.createElement(Popover.Dropdown, {\n    ...others,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    role: \"menu\",\n    \"aria-orientation\": \"vertical\",\n    ref: useMergedRef(ref, wrapperRef),\n    ...ctx.getStyles(\"dropdown\", {\n      className,\n      style,\n      styles,\n      classNames,\n      withStaticClass: false\n    }),\n    tabIndex: -1,\n    \"data-menu-dropdown\": true,\n    onKeyDown: handleKeyDown\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    tabIndex: -1,\n    \"data-autofocus\": true\n  }), children);\n});\nMenuDropdown.classes = classes;\nMenuDropdown.displayName = \"@mantine/core/MenuDropdown\";\nexport { MenuDropdown };","map":null,"metadata":{},"sourceType":"module"}