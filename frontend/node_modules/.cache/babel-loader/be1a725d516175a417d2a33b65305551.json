{"ast":null,"code":"'use client';\n\nimport { toRgba } from '../to-rgba/to-rgba.mjs';\nfunction gammaCorrect(c) {\n  return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n}\nfunction getLightnessFromOklch(oklchColor) {\n  const match = oklchColor.match(/oklch\\((.*?)%\\s/);\n  return match ? parseFloat(match[1]) : null;\n}\nfunction luminance(color) {\n  if (color.startsWith(\"oklch(\")) {\n    return (getLightnessFromOklch(color) || 0) / 100;\n  }\n  const {\n    r,\n    g,\n    b\n  } = toRgba(color);\n  const sR = r / 255;\n  const sG = g / 255;\n  const sB = b / 255;\n  const rLinear = gammaCorrect(sR);\n  const gLinear = gammaCorrect(sG);\n  const bLinear = gammaCorrect(sB);\n  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;\n}\nfunction isLightColor(color) {\n  let luminanceThreshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.179;\n  if (color.startsWith(\"var(\")) {\n    return false;\n  }\n  return luminance(color) > luminanceThreshold;\n}\nexport { isLightColor, luminance };","map":null,"metadata":{},"sourceType":"module"}