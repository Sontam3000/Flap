{"ast":null,"code":"'use client';\n\nimport { getPrimaryShade } from '../get-primary-shade/get-primary-shade.mjs';\nimport { parseThemeColor } from '../parse-theme-color/parse-theme-color.mjs';\nfunction getContrastColor(_ref) {\n  let {\n    color,\n    theme,\n    autoContrast = true\n  } = _ref;\n  const _autoContrast = typeof autoContrast === \"boolean\" ? autoContrast : theme.autoContrast;\n  if (!_autoContrast) {\n    return \"var(--mantine-color-white)\";\n  }\n  const parsed = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme\n  });\n  return parsed.isLight ? \"var(--mantine-color-black)\" : \"var(--mantine-color-white)\";\n}\nfunction getPrimaryContrastColor(theme, colorScheme) {\n  return getContrastColor({\n    color: theme.colors[theme.primaryColor][getPrimaryShade(theme, colorScheme)],\n    theme,\n    autoContrast: null\n  });\n}\nexport { getContrastColor, getPrimaryContrastColor };","map":null,"metadata":{},"sourceType":"module"}