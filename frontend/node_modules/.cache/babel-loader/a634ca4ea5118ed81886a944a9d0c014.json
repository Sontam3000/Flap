{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../../core/utils/keys/keys.mjs';\nimport { rem } from '../../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../../core/MantineProvider/default-theme.mjs';\nimport '../../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../../core/Box/Box.mjs';\nimport '../../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getBaseSize } from '../get-base-size/get-base-size.mjs';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.mjs';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size.mjs';\nfunction assignFooterVariables(_ref) {\n  var _footer$offset;\n  let {\n    baseStyles,\n    minMediaStyles,\n    footer\n  } = _ref;\n  const footerHeight = footer === null || footer === void 0 ? void 0 : footer.height;\n  const collapsedFooterTransform = \"translateY(var(--app-shell-footer-height))\";\n  const shouldOffset = (_footer$offset = footer === null || footer === void 0 ? void 0 : footer.offset) !== null && _footer$offset !== void 0 ? _footer$offset : true;\n  if (isPrimitiveSize(footerHeight)) {\n    const baseSize = rem(getBaseSize(footerHeight));\n    baseStyles[\"--app-shell-footer-height\"] = baseSize;\n    if (shouldOffset) {\n      baseStyles[\"--app-shell-footer-offset\"] = baseSize;\n    }\n  }\n  if (isResponsiveSize(footerHeight)) {\n    if (typeof footerHeight.base !== \"undefined\") {\n      baseStyles[\"--app-shell-footer-height\"] = rem(footerHeight.base);\n      if (shouldOffset) {\n        baseStyles[\"--app-shell-footer-offset\"] = rem(footerHeight.base);\n      }\n    }\n    keys(footerHeight).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-footer-height\"] = rem(footerHeight[key]);\n        if (shouldOffset) {\n          minMediaStyles[key][\"--app-shell-footer-offset\"] = rem(footerHeight[key]);\n        }\n      }\n    });\n  }\n  if (footer === null || footer === void 0 ? void 0 : footer.collapsed) {\n    baseStyles[\"--app-shell-footer-transform\"] = collapsedFooterTransform;\n    baseStyles[\"--app-shell-footer-offset\"] = \"0px !important\";\n  }\n}\nexport { assignFooterVariables };","map":null,"metadata":{},"sourceType":"module"}