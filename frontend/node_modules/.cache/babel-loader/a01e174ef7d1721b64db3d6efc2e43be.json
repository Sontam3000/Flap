{"ast":null,"code":"'use client';\n\nimport { getThemeStyles } from './get-theme-styles/get-theme-styles.mjs';\nimport { resolveStyle } from './resolve-style/resolve-style.mjs';\nimport { resolveStyles } from './resolve-styles/resolve-styles.mjs';\nimport { resolveVars } from './resolve-vars/resolve-vars.mjs';\nfunction getStyle(_ref) {\n  let {\n    theme,\n    themeName,\n    selector,\n    options,\n    props,\n    stylesCtx,\n    rootSelector,\n    styles,\n    style,\n    vars,\n    varsResolver\n  } = _ref;\n  return {\n    ...getThemeStyles({\n      theme,\n      themeName,\n      props,\n      stylesCtx,\n      selector\n    }),\n    ...resolveStyles({\n      theme,\n      styles,\n      props,\n      stylesCtx\n    })[selector],\n    ...resolveStyles({\n      theme,\n      styles: options === null || options === void 0 ? void 0 : options.styles,\n      props: (options === null || options === void 0 ? void 0 : options.props) || props,\n      stylesCtx\n    })[selector],\n    ...resolveVars({\n      theme,\n      props,\n      stylesCtx,\n      vars,\n      varsResolver,\n      selector,\n      themeName\n    }),\n    ...(rootSelector === selector ? resolveStyle({\n      style,\n      theme\n    }) : null),\n    ...resolveStyle({\n      style: options === null || options === void 0 ? void 0 : options.style,\n      theme\n    })\n  };\n}\nexport { getStyle };","map":null,"metadata":{},"sourceType":"module"}