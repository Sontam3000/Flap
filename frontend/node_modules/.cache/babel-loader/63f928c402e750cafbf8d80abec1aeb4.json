{"ast":null,"code":"'use client';\n\nfunction escapeRegex(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n}\nfunction highlighter(value, _highlight) {\n  if (_highlight == null) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  const highlight = Array.isArray(_highlight) ? _highlight.map(escapeRegex) : escapeRegex(_highlight);\n  const shouldHighlight = Array.isArray(highlight) ? highlight.filter(part => part.trim().length > 0).length > 0 : highlight.trim() !== \"\";\n  if (!shouldHighlight) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  const matcher = typeof highlight === \"string\" ? highlight.trim() : highlight.filter(part => part.trim().length !== 0).map(part => part.trim()).sort((a, b) => b.length - a.length).join(\"|\");\n  const re = new RegExp(\"(\".concat(matcher, \")\"), \"gi\");\n  const chunks = value.split(re).map(part => ({\n    chunk: part,\n    highlighted: re.test(part)\n  })).filter(_ref => {\n    let {\n      chunk\n    } = _ref;\n    return chunk;\n  });\n  return chunks;\n}\nexport { highlighter };","map":null,"metadata":{},"sourceType":"module"}