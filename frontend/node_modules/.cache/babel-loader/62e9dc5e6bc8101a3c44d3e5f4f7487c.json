{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Badge.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    radius,\n    color,\n    gradient,\n    variant,\n    size,\n    autoContrast\n  } = _ref;\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    gradient,\n    variant: variant || \"filled\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--badge-height\": getSize(size, \"badge-height\"),\n      \"--badge-padding-x\": getSize(size, \"badge-padding-x\"),\n      \"--badge-fz\": getSize(size, \"badge-fz\"),\n      \"--badge-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--badge-bg\": color || variant ? colors.background : void 0,\n      \"--badge-color\": color || variant ? colors.color : void 0,\n      \"--badge-bd\": color || variant ? colors.border : void 0,\n      \"--badge-dot-color\": variant === \"dot\" ? getThemeColor(color, theme) : void 0\n    }\n  };\n});\nconst Badge = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Badge\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    autoContrast,\n    circle,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Badge\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */React.createElement(Box, {\n    variant,\n    mod: [{\n      block: fullWidth,\n      circle\n    }, mod],\n    ...getStyles(\"root\", {\n      variant\n    }),\n    ref,\n    ...others\n  }, leftSection && /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"section\"),\n    \"data-position\": \"left\"\n  }, leftSection), /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"label\")\n  }, children), rightSection && /* @__PURE__ */React.createElement(\"span\", {\n    ...getStyles(\"section\"),\n    \"data-position\": \"right\"\n  }, rightSection));\n});\nBadge.classes = classes;\nBadge.displayName = \"@mantine/core/Badge\";\nexport { Badge };","map":null,"metadata":{},"sourceType":"module"}