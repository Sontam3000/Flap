{"ast":null,"code":"'use client';\n\nimport React, { forwardRef, useState } from 'react';\nimport { useDebounceCallback } from '@mantine/hooks';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { useResizeObserver } from '../use-resize-observer.mjs';\nimport { ScrollAreaScrollbarVisible } from './ScrollAreaScrollbarVisible.mjs';\nconst ScrollAreaScrollbarAuto = forwardRef((props, ref) => {\n  const context = useScrollAreaContext();\n  const {\n    forceMount,\n    ...scrollbarProps\n  } = props;\n  const [visible, setVisible] = useState(false);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n  if (forceMount || visible) {\n    return /* @__PURE__ */React.createElement(ScrollAreaScrollbarVisible, {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref\n    });\n  }\n  return null;\n});\nexport { ScrollAreaScrollbarAuto };","map":null,"metadata":{},"sourceType":"module"}