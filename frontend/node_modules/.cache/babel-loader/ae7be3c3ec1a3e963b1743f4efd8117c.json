{"ast":null,"code":"'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Image.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    radius,\n    fit\n  } = _ref;\n  return {\n    root: {\n      \"--image-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--image-object-fit\": fit\n    }\n  };\n});\nconst Image = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Image\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    ...others\n  } = props;\n  const [error, setError] = useState(!src);\n  useEffect(() => setError(!src), [src]);\n  const getStyles = useStyles({\n    name: \"Image\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  if (error && fallbackSrc) {\n    return /* @__PURE__ */React.createElement(Box, {\n      component: \"img\",\n      src: fallbackSrc,\n      ...getStyles(\"root\"),\n      onError,\n      mod: [\"fallback\", mod],\n      ...others\n    });\n  }\n  return /* @__PURE__ */React.createElement(Box, {\n    component: \"img\",\n    ref,\n    ...getStyles(\"root\"),\n    src,\n    onError: event => {\n      onError === null || onError === void 0 ? void 0 : onError(event);\n      setError(true);\n    },\n    mod,\n    ...others\n  });\n});\nImage.classes = classes;\nImage.displayName = \"@mantine/core/Image\";\nexport { Image };","map":null,"metadata":{},"sourceType":"module"}