{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles.mjs';\nimport { useTransition } from './use-transition.mjs';\nfunction Transition(_ref) {\n  let {\n    keepMounted,\n    transition = \"fade\",\n    duration = 250,\n    exitDuration = duration,\n    mounted,\n    children,\n    timingFunction = \"ease\",\n    onExit,\n    onEntered,\n    onEnter,\n    onExited\n  } = _ref;\n  const {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction\n  } = useTransition({\n    mounted,\n    exitDuration,\n    duration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited\n  });\n  if (transitionDuration === 0) {\n    return mounted ? /* @__PURE__ */React.createElement(React.Fragment, null, children({})) : keepMounted ? children({\n      display: \"none\"\n    }) : null;\n  }\n  return transitionStatus === \"exited\" ? keepMounted ? children({\n    display: \"none\"\n  }) : null : /* @__PURE__ */React.createElement(React.Fragment, null, children(getTransitionStyles({\n    transition,\n    duration: transitionDuration,\n    state: transitionStatus,\n    timingFunction: transitionTimingFunction\n  })));\n}\nTransition.displayName = \"@mantine/core/Transition\";\nexport { Transition };","map":null,"metadata":{},"sourceType":"module"}