{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport { Overlay } from '../Overlay/Overlay.mjs';\nimport '../Transition/transitions.mjs';\nimport { Transition } from '../Transition/Transition.mjs';\nimport classes from './LoadingOverlay.module.css.mjs';\nconst defaultProps = {\n  transitionProps: {\n    transition: \"fade\",\n    duration: 0\n  },\n  overlayProps: {\n    backgroundOpacity: 0.75\n  },\n  zIndex: getDefaultZIndex(\"overlay\")\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    zIndex\n  } = _ref;\n  return {\n    root: {\n      \"--lo-z-index\": zIndex === null || zIndex === void 0 ? void 0 : zIndex.toString()\n    }\n  };\n});\nconst LoadingOverlay = factory((_props, ref) => {\n  const props = useProps(\"LoadingOverlay\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    transitionProps,\n    loaderProps,\n    overlayProps,\n    visible,\n    zIndex,\n    ...others\n  } = props;\n  const theme = useMantineTheme();\n  const getStyles = useStyles({\n    name: \"LoadingOverlay\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const _overlayProps = {\n    ...defaultProps.overlayProps,\n    ...overlayProps\n  };\n  return /* @__PURE__ */React.createElement(Transition, {\n    transition: \"fade\",\n    ...transitionProps,\n    mounted: !!visible\n  }, transitionStyles => /* @__PURE__ */React.createElement(Box, {\n    ...getStyles(\"root\", {\n      style: transitionStyles\n    }),\n    ref,\n    ...others\n  }, /* @__PURE__ */React.createElement(Loader, {\n    ...getStyles(\"loader\"),\n    unstyled,\n    ...loaderProps\n  }), /* @__PURE__ */React.createElement(Overlay, {\n    ..._overlayProps,\n    ...getStyles(\"overlay\"),\n    darkHidden: true,\n    unstyled,\n    color: (overlayProps === null || overlayProps === void 0 ? void 0 : overlayProps.color) || theme.white\n  }), /* @__PURE__ */React.createElement(Overlay, {\n    ..._overlayProps,\n    ...getStyles(\"overlay\"),\n    lightHidden: true,\n    unstyled,\n    color: (overlayProps === null || overlayProps === void 0 ? void 0 : overlayProps.color) || theme.colors.dark[5]\n  })));\n});\nLoadingOverlay.classes = classes;\nLoadingOverlay.displayName = \"@mantine/core/LoadingOverlay\";\nexport { LoadingOverlay };","map":null,"metadata":{},"sourceType":"module"}