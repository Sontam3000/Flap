{"ast":null,"code":"'use client';\n\nimport { isOptionsGroup } from './is-options-group.mjs';\nfunction validateOptions(options) {\n  let valuesSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /* @__PURE__ */new Set();\n  if (!Array.isArray(options)) {\n    return;\n  }\n  for (const option of options) {\n    if (isOptionsGroup(option)) {\n      validateOptions(option.items, valuesSet);\n    } else {\n      if (typeof option.value === \"undefined\") {\n        throw new Error(\"[@mantine/core] Each option must have value property\");\n      }\n      if (typeof option.value !== \"string\") {\n        throw new Error(\"[@mantine/core] Option value must be a string, other data formats are not supported, got \".concat(typeof option.value));\n      }\n      if (valuesSet.has(option.value)) {\n        throw new Error(\"[@mantine/core] Duplicate options are not supported. Option with value \\\"\".concat(option.value, \"\\\" was provided more than once\"));\n      }\n      valuesSet.add(option.value);\n    }\n  }\n}\nexport { validateOptions };","map":null,"metadata":{},"sourceType":"module"}