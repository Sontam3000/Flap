{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { usePaginationContext } from '../Pagination.context.mjs';\nimport { PaginationControl } from '../PaginationControl/PaginationControl.mjs';\nimport { PaginationDots } from '../PaginationDots/PaginationDots.mjs';\nfunction PaginationItems(_ref) {\n  let {\n    dotsIcon\n  } = _ref;\n  const ctx = usePaginationContext();\n  const items = ctx.range.map((page, index) => {\n    var _ctx$getItemProps;\n    if (page === \"dots\") {\n      return /* @__PURE__ */React.createElement(PaginationDots, {\n        icon: dotsIcon,\n        key: index\n      });\n    }\n    return /* @__PURE__ */React.createElement(PaginationControl, {\n      key: index,\n      active: page === ctx.active,\n      \"aria-current\": page === ctx.active ? \"page\" : void 0,\n      onClick: () => ctx.onChange(page),\n      disabled: ctx.disabled,\n      ...((_ctx$getItemProps = ctx.getItemProps) === null || _ctx$getItemProps === void 0 ? void 0 : _ctx$getItemProps.call(ctx, page))\n    }, page);\n  });\n  return /* @__PURE__ */React.createElement(React.Fragment, null, items);\n}\nPaginationItems.displayName = \"@mantine/core/PaginationItems\";\nexport { PaginationItems };","map":null,"metadata":{},"sourceType":"module"}