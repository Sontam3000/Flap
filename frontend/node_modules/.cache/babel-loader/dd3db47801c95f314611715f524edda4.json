{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../../Input/Input.mjs';\nimport '../../Input/InputWrapper/InputWrapper.mjs';\nimport '../../Input/InputDescription/InputDescription.mjs';\nimport '../../Input/InputError/InputError.mjs';\nimport '../../Input/InputLabel/InputLabel.mjs';\nimport '../../Input/InputPlaceholder/InputPlaceholder.mjs';\nimport { useInputWrapperContext } from '../../Input/InputWrapper.context.mjs';\nimport { usePillsInputContext } from '../PillsInput.context.mjs';\nimport classes from '../PillsInput.module.css.mjs';\nconst defaultProps = {\n  type: \"visible\"\n};\nconst PillsInputField = factory((_props, ref) => {\n  const props = useProps(\"PillsInputField\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    type,\n    disabled,\n    id,\n    pointer,\n    mod,\n    ...others\n  } = props;\n  const ctx = usePillsInputContext();\n  const inputWrapperCtx = useInputWrapperContext();\n  const getStyles = useStyles({\n    name: \"PillsInputField\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"field\"\n  });\n  const _disabled = disabled || (ctx === null || ctx === void 0 ? void 0 : ctx.disabled);\n  return /* @__PURE__ */React.createElement(Box, {\n    component: \"input\",\n    ref: useMergedRef(ref, ctx === null || ctx === void 0 ? void 0 : ctx.fieldRef),\n    \"data-type\": type,\n    disabled: _disabled,\n    mod: [{\n      disabled: _disabled,\n      pointer\n    }, mod],\n    ...getStyles(\"field\"),\n    ...others,\n    id: (inputWrapperCtx === null || inputWrapperCtx === void 0 ? void 0 : inputWrapperCtx.inputId) || id,\n    \"aria-invalid\": ctx === null || ctx === void 0 ? void 0 : ctx.hasError,\n    \"aria-describedby\": inputWrapperCtx === null || inputWrapperCtx === void 0 ? void 0 : inputWrapperCtx.describedBy,\n    type: \"text\",\n    onMouseDown: event => !pointer && event.stopPropagation()\n  });\n});\nPillsInputField.classes = classes;\nPillsInputField.displayName = \"@mantine/core/PillsInputField\";\nexport { PillsInputField };","map":null,"metadata":{},"sourceType":"module"}