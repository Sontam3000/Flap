{"ast":null,"code":"'use client';\n\nimport React from 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { useDirection } from '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useRatingContext } from '../Rating.context.mjs';\nimport { StarSymbol } from '../StarSymbol/StarSymbol.mjs';\nfunction RatingItem(_ref) {\n  var _ref2;\n  let {\n    getSymbolLabel,\n    emptyIcon,\n    fullIcon,\n    full,\n    active,\n    value,\n    readOnly,\n    fractionValue,\n    color,\n    id,\n    onBlur,\n    onChange,\n    onInputChange,\n    style,\n    ...others\n  } = _ref;\n  const ctx = useRatingContext();\n  const _fullIcon = typeof fullIcon === \"function\" ? fullIcon(value) : fullIcon;\n  const _emptyIcon = typeof emptyIcon === \"function\" ? emptyIcon(value) : emptyIcon;\n  const {\n    dir\n  } = useDirection();\n  return /* @__PURE__ */React.createElement(React.Fragment, null, !readOnly && /* @__PURE__ */React.createElement(\"input\", {\n    ...ctx.getStyles(\"input\"),\n    onKeyDown: event => event.key === \" \" && onChange(value),\n    id,\n    type: \"radio\",\n    \"data-active\": active || void 0,\n    \"aria-label\": getSymbolLabel === null || getSymbolLabel === void 0 ? void 0 : getSymbolLabel(value),\n    value,\n    onBlur,\n    onChange: onInputChange,\n    ...others\n  }), /* @__PURE__ */React.createElement(Box, {\n    component: readOnly ? \"div\" : \"label\",\n    ...ctx.getStyles(\"label\"),\n    \"data-read-only\": readOnly || void 0,\n    htmlFor: id,\n    onClick: () => onChange(value),\n    __vars: {\n      \"--rating-item-z-index\": (_ref2 = fractionValue === 1 ? void 0 : active ? 2 : 0) === null || _ref2 === void 0 ? void 0 : _ref2.toString()\n    }\n  }, /* @__PURE__ */React.createElement(Box, {\n    ...ctx.getStyles(\"symbolBody\"),\n    __vars: {\n      \"--rating-symbol-clip-path\": fractionValue === 1 ? void 0 : dir === \"ltr\" ? \"inset(0 \".concat(active ? 100 - fractionValue * 100 : 100, \"% 0 0)\") : \"inset(0 0 0 \".concat(active ? 100 - fractionValue * 100 : 100, \"% )\")\n    }\n  }, full ? _fullIcon || /* @__PURE__ */React.createElement(StarSymbol, {\n    type: \"full\"\n  }) : _emptyIcon || /* @__PURE__ */React.createElement(StarSymbol, {\n    type: \"empty\"\n  }))));\n}\nRatingItem.displayName = \"@mantine/core/RatingItem\";\nexport { RatingItem };","map":null,"metadata":{},"sourceType":"module"}